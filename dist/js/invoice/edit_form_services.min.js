const servicesTbody=document.querySelector(".invoice-edit__form-box-services-table tbody"),addNewServiceBtn=document.querySelector(".new-service-btn"),showEmptyInfo=()=>{var e=servicesTbody.querySelectorAll("tr"),t=servicesTbody.querySelector(".empty-info");1===e.length?t.style.display="grid":1<e.length&&(t.style.display="none")},updateItemsNumbers=(document.addEventListener("DOMContentLoaded",showEmptyInfo),()=>{var t=document.querySelectorAll(".invoice-edit__form-box-services-table .service-item-number"),n=document.querySelectorAll(".position-hidden-input");for(let e=0;e<t.length;e++)t[e].textContent=e+1;for(let e=0;e<n.length;e++)n[e].value=e+1});let servicesLength=servicesTbody.querySelectorAll("tr").length;const createNewService=e=>{e.preventDefault();var e=document.createElement("tr"),t=document.createElement("td"),n=(t.innerHTML=`<span class="service-title--mobile">No.: </span><span class="service-item-number"></span>
	<input hidden class="position-hidden-input" type="text" name="position[${servicesLength}]" value=""></input>`,document.createElement("td")),a=(n.innerHTML=`<span class="service-title--mobile">Item / service: </span>
	<input class="service-item-name"  type="text" name="service_name[${servicesLength}]">`,document.createElement("td")),s=(a.innerHTML=`<span class="service-title--mobile">Service code: </span>
	<input class="service-item-code" type="text" name="service_code[${servicesLength}]">`,document.createElement("td")),r=(s.innerHTML=`<span class="service-title--mobile">Quantity: </span>
	<input type="number" value="1" min="0" class="service-item-amount" name="quantity[${servicesLength}]">`,document.createElement("td")),c=(r.innerHTML=`<span class="service-title--mobile">Net price (PLN): </span>
	<input type="number" min="0" value="0.00" class="service-item-net-value" name="item_net_price[${servicesLength}]" step=".01">`,document.createElement("td")),l=(c.innerHTML=`<span class="service-title--mobile">Tax: </span>
	<select class="service-item-tax" name="service_tax[${servicesLength}]">
		<option value="0">tax-free</option>
		<option value="0.08">8%</option>
		<option value="0.23">23%</option>
	</select>`,document.createElement("td")),i=(l.innerHTML=`<span class="service-title--mobile">Net sum (PLN): </span>
	<input type="text" value="0.00 PLN" class="service-item-net-sum" name="service_total_net[${servicesLength}]" readonly>`,document.createElement("td")),o=(i.innerHTML=`<span class="service-title--mobile">Gross sum (PLN): </span>
	<input type="text" value="0.00 PLN" class="service-item-gross-sum" name="service_total_gross[${servicesLength}]" readonly>`,document.createElement("td"));o.innerHTML=`<button class="delete-btn">
	<i class="fa-solid fa-trash"></i>Delete</button>`,e.append(t,n,a,s,r,c,l,i,o),servicesTbody.append(e),updateItemsNumbers(),showEmptyInfo(),servicesLength++},calculateItemTotalNet=(addNewServiceBtn.addEventListener("click",e=>createNewService(e)),e=>{var t=e.target.parentElement.parentElement,n=t.querySelector(".service-item-amount").value,a=t.querySelector(".service-item-net-value").value;t.querySelector(".service-item-net-sum").value=((n*a).toFixed(2)+" PLN").replace(".",","),calculateItemTotalGross(e,(n*a).toFixed(2))}),calculateItemTotalGross=e=>{var e=e.target.parentElement.parentElement,t=e.querySelector(".service-item-tax").value,n=e.querySelector(".service-item-net-sum").value,e=e.querySelector(".service-item-gross-sum"),t=parseFloat(t)*parseFloat(n.replace(",","."))+parseFloat(n.replace(",","."));e.value=(t.toFixed(2)+" PLN").replace(".",","),calculateTableSummary()},changeValueInHiddenInput=(e,t)=>{document.querySelector(t).value=e},calculateInvoiceTotalNet=()=>{var e=document.querySelectorAll(".service-item-net-sum"),t=document.querySelector(".invoice-total-net");let n=0;e.forEach(e=>{n+=parseFloat(e.value)}),t.textContent=(n.toFixed(2)+" PLN").replace(".",","),changeValueInHiddenInput(n.toFixed(2),"#total-net")},calculateInvoiceTotalGross=()=>{var e=document.querySelectorAll(".service-item-gross-sum"),t=document.querySelector(".invoice-total-gross");let n=0;e.forEach(e=>{n+=parseFloat(e.value)}),t.textContent=(n.toFixed(2)+" PLN").replace(".",","),changeValueInHiddenInput(n.toFixed(2),"#total-gross"),changeValueInHiddenInput(n.toFixed(2),"#to-pay-numeric"),changeValueInHiddenInput(verbalNotation(n.toFixed(2)),"#to-pay-verbal")},calculateTableSummary=()=>{calculateInvoiceTotalNet(),calculateInvoiceTotalGross()},deleteServiceItem=(document.addEventListener("input",e=>{(e.target.classList.contains("service-item-amount")||e.target.classList.contains("service-item-net-value"))&&calculateItemTotalNet(e),e.target.classList.contains("service-item-tax")&&calculateItemTotalGross(e)}),e=>{e.preventDefault(),e.target.parentElement.parentElement.outerHTML="",updateItemsNumbers(),showEmptyInfo(),calculateTableSummary()}),updateServicesTable=(document.addEventListener("click",e=>{e.target.classList.contains("delete-btn")&&deleteServiceItem(e)}),()=>{updateItemsNumbers(),showEmptyInfo(),calculateTableSummary()});document.addEventListener("DOMContentLoaded",updateServicesTable),document.addEventListener("keydown",e=>{"Enter"===e.key&&"textarea"!==e.target.localName&&e.preventDefault()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
