console.log("Test");const unities=["zero","jeden","dwa","trzy","cztery","pięć","sześć","siedem","osiem","dziewięć"],dozens=["dziesięć","dwadzieścia","trzydzieści","czterdzieści","pięćdziesiąt","sześćdziesiąt","siedemdziesiąt","osiemdziesiąt","dziewięćdziesiąt"],hundreds=["sto","dwieście","trzysta","czterysta","pięćset","sześćset","siedemset","osiemset","dziewięćset"],thousands_1="tysiąc",thousands_234="tysiące",thousands_rest="tysięcy",numToWord=s=>{for(;"0"===s[0];)s=s.substring(1);let e="00";s.includes(",")&&(e=(e=s.substring(s.indexOf(",")+1)).substring(0,2));let o;0===(o=s.includes(",")?s.substring(0,s.indexOf(",")):o).length&&console.log("Podaj jakąś liczbę, podana liczba jest za krótka"),1===o.length?unitiesNumToWords(o):2===o.length?dozensNumToWords(o):3===o.length?hundredsNumToWords(o):4===o.length?thousandsNumToWords(o):5===o.length?aboveOntenThousandsToWords(o):6===o.length?aboveHundredThousandsNumToWords(o):console.log("Podana liczba jest za długa - prace trwają.")},unitiesNumToWords=s=>{console.log("Liczba składa się z jedności")},dozensNumToWords=s=>{console.log("Liczba składa się z dziesiątek")},hundredsNumToWords=s=>{console.log("Liczba składa się z setek")},thousandsNumToWords=s=>{console.log("Liczba składa się z tysięcy")},aboveOntenThousandsToWords=s=>{console.log("Liczba składa się z nastu tysięcy")},aboveHundredThousandsNumToWords=s=>{console.log("Liczba składa się z ponad stu tysięcy")};numToWord("000000945467,968745");
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnVtX3RvX3dvcmQubWluLmpzIiwic291cmNlcyI6WyJudW1fdG9fd29yZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zb2xlLmxvZygnVGVzdCcpO1xyXG5cclxuY29uc3QgdW5pdGllcyA9IFtcclxuXHQnemVybycsXHJcblx0J2plZGVuJyxcclxuXHQnZHdhJyxcclxuXHQndHJ6eScsXHJcblx0J2N6dGVyeScsXHJcblx0J3BpxJnEhycsXHJcblx0J3N6ZcWbxIcnLFxyXG5cdCdzaWVkZW0nLFxyXG5cdCdvc2llbScsXHJcblx0J2R6aWV3acSZxIcnLFxyXG5dO1xyXG5cclxuY29uc3QgZG96ZW5zID0gW1xyXG5cdCdkemllc2nEmcSHJyxcclxuXHQnZHdhZHppZcWbY2lhJyxcclxuXHQndHJ6eWR6aWXFm2NpJyxcclxuXHQnY3p0ZXJkemllxZtjaScsXHJcblx0J3BpxJnEh2R6aWVzacSFdCcsXHJcblx0J3N6ZcWbxIdkemllc2nEhXQnLFxyXG5cdCdzaWVkZW1kemllc2nEhXQnLFxyXG5cdCdvc2llbWR6aWVzacSFdCcsXHJcblx0J2R6aWV3acSZxIdkemllc2nEhXQnLFxyXG5dO1xyXG5cclxuY29uc3QgaHVuZHJlZHMgPSBbXHJcblx0J3N0bycsXHJcblx0J2R3aWXFm2NpZScsXHJcblx0J3RyenlzdGEnLFxyXG5cdCdjenRlcnlzdGEnLFxyXG5cdCdwacSZxIdzZXQnLFxyXG5cdCdzemXFm8SHc2V0JyxcclxuXHQnc2llZGVtc2V0JyxcclxuXHQnb3NpZW1zZXQnLFxyXG5cdCdkemlld2nEmcSHc2V0JyxcclxuXTtcclxuXHJcbmNvbnN0IHRob3VzYW5kc18xID0gJ3R5c2nEhWMnO1xyXG5jb25zdCB0aG91c2FuZHNfMjM0ID0gJ3R5c2nEhWNlJztcclxuY29uc3QgdGhvdXNhbmRzX3Jlc3QgPSAndHlzacSZY3knO1xyXG5cclxuY29uc3QgbnVtVG9Xb3JkID0gKG51bSkgPT4ge1xyXG5cdC8vIGxvb3AgdGhhdCByZW1vdmVzIHplcm9zIGZyb20gdGhlIGZyb250IG9mIHRoZSBudW1iZXIgKHN0cmluZylcclxuXHR3aGlsZSAobnVtWzBdID09PSAnMCcpIHtcclxuXHRcdG51bSA9IG51bS5zdWJzdHJpbmcoMSk7XHJcblx0fVxyXG5cclxuXHRsZXQgcmVzdEFtb3VudCA9ICcwMCc7XHJcblx0aWYgKG51bS5pbmNsdWRlcygnLCcpKSB7XHJcblx0XHRyZXN0QW1vdW50ID0gbnVtLnN1YnN0cmluZyhudW0uaW5kZXhPZignLCcpICsgMSk7XHJcblx0XHQvLyBJbiB0aGUgZnV0dXJlLCB0aGUgbm90YXRpb24gY2FuIGJlIG1hdGhlbWF0aWNhbGx5IHJvdW5kZWQgaW5zdGVhZCBvZiBzaG9ydGVuZWRcclxuXHRcdHJlc3RBbW91bnQgPSByZXN0QW1vdW50LnN1YnN0cmluZygwLCAyKTtcclxuXHR9XHJcblxyXG5cdGxldCB3aG9sZUFtb3VudDtcclxuXHRpZiAobnVtLmluY2x1ZGVzKCcsJykpIHtcclxuXHRcdHdob2xlQW1vdW50ID0gbnVtLnN1YnN0cmluZygwLCBudW0uaW5kZXhPZignLCcpKTtcclxuXHR9XHJcblxyXG5cdGlmICh3aG9sZUFtb3VudC5sZW5ndGggPT09IDApIHtcclxuXHRcdGNvbnNvbGUubG9nKCdQb2RhaiBqYWvEhcWbIGxpY3pixJksIHBvZGFuYSBsaWN6YmEgamVzdCB6YSBrcsOzdGthJyk7XHJcblx0fVxyXG5cclxuXHRpZiAod2hvbGVBbW91bnQubGVuZ3RoID09PSAxKSB7XHJcblx0XHR1bml0aWVzTnVtVG9Xb3Jkcyh3aG9sZUFtb3VudCk7XHJcblx0fSBlbHNlIGlmICh3aG9sZUFtb3VudC5sZW5ndGggPT09IDIpIHtcclxuXHRcdGRvemVuc051bVRvV29yZHMod2hvbGVBbW91bnQpO1xyXG5cdH0gZWxzZSBpZiAod2hvbGVBbW91bnQubGVuZ3RoID09PSAzKSB7XHJcblx0XHRodW5kcmVkc051bVRvV29yZHMod2hvbGVBbW91bnQpO1xyXG5cdH0gZWxzZSBpZiAod2hvbGVBbW91bnQubGVuZ3RoID09PSA0KSB7XHJcblx0XHR0aG91c2FuZHNOdW1Ub1dvcmRzKHdob2xlQW1vdW50KTtcclxuXHR9IGVsc2UgaWYgKHdob2xlQW1vdW50Lmxlbmd0aCA9PT0gNSkge1xyXG5cdFx0YWJvdmVPbnRlblRob3VzYW5kc1RvV29yZHMod2hvbGVBbW91bnQpO1xyXG5cdH0gZWxzZSBpZiAod2hvbGVBbW91bnQubGVuZ3RoID09PSA2KSB7XHJcblx0XHRhYm92ZUh1bmRyZWRUaG91c2FuZHNOdW1Ub1dvcmRzKHdob2xlQW1vdW50KTtcclxuXHR9IGVsc2Uge1xyXG5cdFx0Y29uc29sZS5sb2coJ1BvZGFuYSBsaWN6YmEgamVzdCB6YSBkxYJ1Z2EgLSBwcmFjZSB0cndhasSFLicpO1xyXG5cdH1cclxuXHJcblx0Ly8gcmV0dXJuIC0gVG8gY28gendyYWNhbXkgd3nFm3dpZXRsaSBzacSZIG5hIGVrcmFuaWVcclxufTtcclxuXHJcbmNvbnN0IHVuaXRpZXNOdW1Ub1dvcmRzID0gKG51bSkgPT4ge1xyXG5cdGNvbnNvbGUubG9nKCdMaWN6YmEgc2vFgmFkYSBzacSZIHogamVkbm/Fm2NpJyk7XHJcbn07XHJcblxyXG5jb25zdCBkb3plbnNOdW1Ub1dvcmRzID0gKG51bSkgPT4ge1xyXG5cdGNvbnNvbGUubG9nKCdMaWN6YmEgc2vFgmFkYSBzacSZIHogZHppZXNpxIV0ZWsnKTtcclxufTtcclxuXHJcbmNvbnN0IGh1bmRyZWRzTnVtVG9Xb3JkcyA9IChudW0pID0+IHtcclxuXHRjb25zb2xlLmxvZygnTGljemJhIHNrxYJhZGEgc2nEmSB6IHNldGVrJyk7XHJcbn07XHJcblxyXG5jb25zdCB0aG91c2FuZHNOdW1Ub1dvcmRzID0gKG51bSkgPT4ge1xyXG5cdGNvbnNvbGUubG9nKCdMaWN6YmEgc2vFgmFkYSBzacSZIHogdHlzacSZY3knKTtcclxufTtcclxuXHJcbmNvbnN0IGFib3ZlT250ZW5UaG91c2FuZHNUb1dvcmRzID0gKG51bSkgPT4ge1xyXG5cdGNvbnNvbGUubG9nKCdMaWN6YmEgc2vFgmFkYSBzacSZIHogbmFzdHUgdHlzacSZY3knKTtcclxufTtcclxuXHJcbmNvbnN0IGFib3ZlSHVuZHJlZFRob3VzYW5kc051bVRvV29yZHMgPSAobnVtKSA9PiB7XHJcblx0Y29uc29sZS5sb2coJ0xpY3piYSBza8WCYWRhIHNpxJkgeiBwb25hZCBzdHUgdHlzacSZY3knKTtcclxufTtcclxuXHJcbm51bVRvV29yZCgnMDAwMDAwOTQ1NDY3LDk2ODc0NScpO1xyXG5cclxuLy8gaHR0cDovL2xvY2FsaG9zdDozMDAwL2ludm9pY2UuaHRtbFxyXG4iXSwibmFtZXMiOlsiY29uc29sZSIsImxvZyIsInVuaXRpZXMiLCJkb3plbnMiLCJodW5kcmVkcyIsInRob3VzYW5kc18xIiwidGhvdXNhbmRzXzIzNCIsInRob3VzYW5kc19yZXN0IiwibnVtVG9Xb3JkIiwibnVtIiwic3Vic3RyaW5nIiwibGV0IiwicmVzdEFtb3VudCIsImluY2x1ZGVzIiwiaW5kZXhPZiIsIndob2xlQW1vdW50IiwibGVuZ3RoIiwidW5pdGllc051bVRvV29yZHMiLCJkb3plbnNOdW1Ub1dvcmRzIiwiaHVuZHJlZHNOdW1Ub1dvcmRzIiwidGhvdXNhbmRzTnVtVG9Xb3JkcyIsImFib3ZlT250ZW5UaG91c2FuZHNUb1dvcmRzIiwiYWJvdmVIdW5kcmVkVGhvdXNhbmRzTnVtVG9Xb3JkcyJdLCJtYXBwaW5ncyI6IkFBQUFBLFFBQVFDLElBQUksTUFBTSxFQUVsQixNQUFNQyxRQUFVLENBQ2YsT0FDQSxRQUNBLE1BQ0EsT0FDQSxTQUNBLE9BQ0EsUUFDQSxTQUNBLFFBQ0EsWUFHS0MsT0FBUyxDQUNkLFdBQ0EsY0FDQSxjQUNBLGVBQ0EsZUFDQSxnQkFDQSxpQkFDQSxnQkFDQSxvQkFHS0MsU0FBVyxDQUNoQixNQUNBLFdBQ0EsVUFDQSxZQUNBLFVBQ0EsV0FDQSxZQUNBLFdBQ0EsZUFHS0MsWUFBYyxTQUNkQyxjQUFnQixVQUNoQkMsZUFBaUIsVUFFakJDLFVBQVksSUFFakIsS0FBa0IsTUFBWEMsRUFBSSxJQUNWQSxFQUFNQSxFQUFJQyxVQUFVLENBQUMsRUFHdEJDLElBQUlDLEVBQWEsS0FDYkgsRUFBSUksU0FBUyxHQUFHLElBR25CRCxHQUZBQSxFQUFhSCxFQUFJQyxVQUFVRCxFQUFJSyxRQUFRLEdBQUcsRUFBSSxDQUFDLEdBRXZCSixVQUFVLEVBQUcsQ0FBQyxHQUd2Q0MsSUFBSUksRUFLdUIsS0FIMUJBLEVBREdOLEVBQUlJLFNBQVMsR0FBRyxFQUNMSixFQUFJQyxVQUFVLEVBQUdELEVBQUlLLFFBQVEsR0FBRyxDQUFDLEVBRzVDQyxHQUFZQyxRQUNmaEIsUUFBUUMsSUFBSSxrREFBa0QsRUFHcEMsSUFBdkJjLEVBQVlDLE9BQ2ZDLGtCQUFrQkYsQ0FBVyxFQUNJLElBQXZCQSxFQUFZQyxPQUN0QkUsaUJBQWlCSCxDQUFXLEVBQ0ssSUFBdkJBLEVBQVlDLE9BQ3RCRyxtQkFBbUJKLENBQVcsRUFDRyxJQUF2QkEsRUFBWUMsT0FDdEJJLG9CQUFvQkwsQ0FBVyxFQUNFLElBQXZCQSxFQUFZQyxPQUN0QkssMkJBQTJCTixDQUFXLEVBQ0wsSUFBdkJBLEVBQVlDLE9BQ3RCTSxnQ0FBZ0NQLENBQVcsRUFFM0NmLFFBQVFDLElBQUksNkNBQTZDLENBSTNELEVBRU1nQixrQkFBb0IsSUFDekJqQixRQUFRQyxJQUFJLDhCQUE4QixDQUMzQyxFQUVNaUIsaUJBQW1CLElBQ3hCbEIsUUFBUUMsSUFBSSxnQ0FBZ0MsQ0FDN0MsRUFFTWtCLG1CQUFxQixJQUMxQm5CLFFBQVFDLElBQUksMkJBQTJCLENBQ3hDLEVBRU1tQixvQkFBc0IsSUFDM0JwQixRQUFRQyxJQUFJLDZCQUE2QixDQUMxQyxFQUVNb0IsMkJBQTZCLElBQ2xDckIsUUFBUUMsSUFBSSxtQ0FBbUMsQ0FDaEQsRUFFTXFCLGdDQUFrQyxJQUN2Q3RCLFFBQVFDLElBQUksdUNBQXVDLENBQ3BELEVBRUFPLFVBQVUscUJBQXFCIn0=
